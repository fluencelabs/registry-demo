module HelloRegistry declares createMyRoute, notifySelfDiscovered, DiscoveryService

import "@fluencelabs/registry/routing.aqua"
import "@fluencelabs/aqua-lib/builtin.aqua"

alias PeerId: string
alias RouteId: string

data DiscoveredUser:
    route: RouteId
    userName: string

service DiscoveryService("discoveryService"):
    notify_discovered(discoveredUser: DiscoveredUser) -> []DiscoveredUser

func createMyRoute(label: string, value: string) -> string:
    relay: ?string
    relay <<- HOST_PEER_ID
    -- res <- createRouteAndJoin(label, value, HOST_PEER_ID, null);
    res <- createRouteAndRegister(label, value, relay, nil)
    <- res

--func notifySelfDiscovered(self: DiscoveredUser) -> []DiscoveredUser:
    -- read the record
    -- go to the peer in the record
    -- notify (with try catch)
    -- return with the result
--    <- ???

func notifySelfDiscovered(self: DiscoveredUser) -> string:
    <- "ok"
