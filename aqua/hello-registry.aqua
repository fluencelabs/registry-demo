module HelloRegistry declares createMyRoute, DiscoveryService, discoverAndNotify

import "@fluencelabs/registry/routing.aqua"
import "@fluencelabs/aqua-lib/builtin.aqua"

alias PeerId: string
alias RouteId: string

data DiscoveredUser:
    route: RouteId
    userName: string

service DiscoveryService("discoveryService"):
    notify_discovered(route_id: string, userName: string) -> []DiscoveredUser

func createMyRoute(label: string, userName: string) -> string:
    relay: ?string
    relay <<- HOST_PEER_ID
    res <- createRouteAndRegister(label, userName, relay, nil)
    <- res

func discoverAndNotify(join_route_id: string, label: string, userName: string) -> string, []DiscoveredUser:
    relay: ?string
    relay <<- HOST_PEER_ID
    our_route_id <- createRouteAndRegister(label, userName, relay, nil)

    recs <- resolveRoute(join_route_id, 4)
    try:
        on recs[0].peer_id via recs[0].relay_id:
            peers <- DiscoveryService.notify_discovered(our_route_id, userName)
    <- our_route_id, peers