module HelloRegistry declares createRoom, joinRoom, getMembers

import initTopicAndSubscribe, findSubscribers from "@fluencelabs/aqua-dht/pubsub.aqua"
import "@fluencelabs/aqua-dht/dht.aqua"
import "@fluencelabs/aqua-lib/builtin.aqua"

alias PeerId: string

func createRoom(label: string) -> string:
    relay_id: ?string
    relay_id <<- HOST_PEER_ID
    initTopicAndSubscribe(label, "myValue", relay_id, nil)
    <- "ok"

func joinRoom(peerId: PeerId, label: string) -> string:
    -- add  
    -- INIT_PEER_ID, HOST_PEER_ID to dht record of peerId, label
    <- "ok"

func getMembers(peerId: PeerId, label: string) -> []string:
    -- get values from dht record of peerId, label
    -- iterate these values, check for connection
    -- return only connected.
    -- something like this:
    --
    -- stream: *string
    -- for r <- records par:
    --     on r.relay:
    --         if Peer.is_connected(r.peer):
    --             <<- record
    -- <- stream

    res <- Op.array("1", "2", "3", "4")
    <- res
