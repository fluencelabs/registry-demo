module HelloRegistry declares advertiseMyself, getMembers

import initTopicAndSubscribe, findSubscribers from "@fluencelabs/aqua-dht/pubsub.aqua"
import "@fluencelabs/aqua-dht/dht.aqua"
import "@fluencelabs/aqua-lib/builtin.aqua"

alias PeerId: string

service MessagingService("messaging"):
    receiveMessage(msg: string)

func advertiseMyself(label: string) -> string:
    relay_id: ?string
    relay_id <<- HOST_PEER_ID
    initTopicAndSubscribe(label, "myValue", relay_id, nil)
    <- "ok"

func getMembers(label: string) -> []string:
    res <- Op.array("1", "2", "3", "4")
    <- res

func callSubscriber(sub: Record, msg: string):
    on sub.peer_id via sub.relay_id:
        MessagingService.receiveMessage(msg)

func sendMyself(hostPeerId: string, relayPeerId: string, msg: string) -> string:
    on hostPeerId via relayPeerId:
        MessagingService.receiveMessage(msg)
    <- "ok"

func sendEveryone(topic: string, msg: string) -> string:
    on HOST_PEER_ID:
        subscribers <- findSubscribers(topic)
        for sub <- subscribers par:
            callSubscriber(sub, msg)
    <- "ok"