module HelloRegistry declares createRoute, notifySelfDiscovered, DiscoveryService

import initTopicAndSubscribe, findSubscribers from "@fluencelabs/aqua-dht/pubsub.aqua"
import "@fluencelabs/aqua-dht/dht.aqua"
import "@fluencelabs/aqua-lib/builtin.aqua"

alias PeerId: string
alias RouteId: string

data DiscoveredUser:
    route: RouteId
    userName: string

service DiscoveryService("discoveryService"):
    notify_discovered(discoveredUser: DiscoveredUser) -> []DiscoveredUser

func createRoute(label: string, value: string) -> string:
    -- res <- createRouteAndJoin(label, value, null, null);
    <- "route id"

--func notifySelfDiscovered(self: DiscoveredUser) -> []DiscoveredUser:
    -- read the record
    -- go to the peer in the record
    -- notify (with try catch)
    -- return with the result
--    <- ???

func notifySelfDiscovered(self: DiscoveredUser) -> string:
    <- "ok"