/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.6.1-279
 *
 */
import { FluencePeer } from '@fluencelabs/fluence';
import { CallParams } from '@fluencelabs/fluence/dist/internal/compilerSupport/v2';
export interface DiscoveryServiceDef {
    notify_discovered: (discoveredUser: {
        route: string;
        userName: string;
    }, callParams: CallParams<'discoveredUser'>) => {
        route: string;
        userName: string;
    }[] | Promise<{
        route: string;
        userName: string;
    }[]>;
}
export declare function registerDiscoveryService(service: DiscoveryServiceDef): void;
export declare function registerDiscoveryService(serviceId: string, service: DiscoveryServiceDef): void;
export declare function registerDiscoveryService(peer: FluencePeer, service: DiscoveryServiceDef): void;
export declare function registerDiscoveryService(peer: FluencePeer, serviceId: string, service: DiscoveryServiceDef): void;
export declare type NotifySelfDiscoveredArgSelf = {
    route: string;
    userName: string;
};
export declare function notifySelfDiscovered(self: NotifySelfDiscoveredArgSelf, config?: {
    ttl?: number;
}): Promise<string>;
export declare function notifySelfDiscovered(peer: FluencePeer, self: NotifySelfDiscoveredArgSelf, config?: {
    ttl?: number;
}): Promise<string>;
export declare function createRoute(label: string, value: string, config?: {
    ttl?: number;
}): Promise<string>;
export declare function createRoute(peer: FluencePeer, label: string, value: string, config?: {
    ttl?: number;
}): Promise<string>;
